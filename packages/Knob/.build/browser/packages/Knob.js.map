{"version":3,"file":"/packages/Knob.js","sources":["Knob/Knob.js"],"names":[],"mappings":";;;;;;;;AAAA,G;AACA,oD;AACA,uC;AACA,G;AACA,gB;AACA,G;AACA,sC;AACA,E;AACA,8B;AACA,yB;AACA,E;AACA,qC;AACA,8B;AACA,sD;AACA,wC;AACA,E;AACA,oD;AACA,G;AACA,c;;AAEA,O;AACA,sB;AACA,O;AACA,iB;AACA,O;AACA,qC;AACA,O;AACA,0B;AACA,2B;AACA,2B;AACA,a;AACA,wB;AACA,yB;AACA,kD;AACA,M;AACA,O;AACA,qB;AACA,M;AACA,2C;AACA,M;AACA,kD;AACA,a;AACA,sB;AACA,c;AACA,O;AACA,sB;AACA,qB;AACA,0C;AACA,gD;AACA,6E;AACA,4E;AACA,wD;AACA,4D;AACA,wC;AACA,wC;AACA,mC;AACA,oC;AACA,gD;AACA,iD;AACA,oC;AACA,4B;AACA,0C;AACA,6C;AACA,oC;AACA,sC;AACA,sC;AACA,uC;AACA,uC;AACA,8B;AACA,mC;AACA,oC;AACA,0C;;AAEA,+B;AACA,wC;AACA,sB;AACA,iC;AACA,qC;AACA,iB;AACA,yB;AACA,8B;AACA,iC;AACA,c;AACA,yC;AACA,uB;AACA,2C;AACA,0B;AACA,8B;AACA,qB;AACA,S;AACA,qD;AACA,uD;AACA,sC;AACA,qG;AACA,6B;AACA,sE;AACA,wD;AACA,qC;AACA,oC;AACA,wD;AACA,wF;AACA,iC;AACA,wC;AACA,kE;AACA,2D;AACA,6D;AACA,yG;AACA,wE;AACA,qE;AACA,8D;AACA,6D;AACA,yE;AACA,sC;AACA,uD;AACA,gC;AACA,qD;AACA,4D;AACA,uD;AACA,6D;AACA,qD;AACA,6B;AACA,sB;AACA,+B;AACA,qC;AACA,mD;AACA,a;;AAEA,gB;AACA,wC;;AAEA,8B;AACA,4B;AACA,6C;AACA,yC;AACA,wC;AACA,mC;AACA,yC;AACA,+B;AACA,0C;AACA,0C;AACA,qC;AACA,6C;AACA,mC;AACA,qB;AACA,sB;AACA,mB;AACA,+C;AACA,oB;;AAEA,kB;AACA,gC;AACA,sC;AACA,wD;AACA,4B;AACA,sC;AACA,sC;AACA,kD;AACA,iB;AACA,kB;AACA,a;;AAEA,oD;AACA,qD;AACA,0D;AACA,4D;AACA,2D;AACA,a;AACA,gF;AACA,0B;AACA,+C;AACA,uB;AACA,a;;AAEA,e;AACA,yD;AACA,qB;AACA,kE;AACA,+D;AACA,8D;AACA,6D;AACA,8D;AACA,8B;AACA,8C;AACA,0D;AACA,kD;AACA,4D;AACA,mD;AACA,wE;AACA,0C;AACA,wC;AACA,8D;AACA,kC;AACA,mD;AACA,wC;AACA,qD;AACA,0B;AACA,6C;AACA,2C;AACA,6B;AACA,2C;AACA,oB;AACA,iC;AACA,a;;AAEA,wB;AACA,kB;AACA,0C;AACA,6B;AACA,2C;AACA,4B;AACA,0B;AACA,iC;AACA,0B;AACA,4B;AACA,+B;AACA,mC;AACA,yB;AACA,wB;AACA,U;AACA,kC;AACA,gC;AACA,0C;AACA,oD;AACA,sD;AACA,qD;AACA,+C;AACA,qD;AACA,uD;AACA,sD;AACA,iC;AACA,iD;AACA,oB;AACA,sC;AACA,uC;AACA,a;;AAEA,e;AACA,2B;AACA,uC;AACA,uC;AACA,e;AACA,kD;AACA,0B;AACA,8B;AACA,8B;AACA,e;AACA,sB;AACA,mC;AACA,iE;AACA,mE;AACA,sC;AACA,uC;AACA,a;;AAEA,wB;AACA,S;;AAEA,iC;;AAEA,uB;AACA,yB;AACA,sB;AACA,sB;AACA,gB;AACA,oC;AACA,sC;AACA,U;AACA,mC;;AAEA,yC;;AAEA,iC;AACA,2D;AACA,0D;AACA,0B;AACA,yC;AACA,0B;AACA,c;AACA,gC;AACA,8B;AACA,0B;AACA,yB;AACA,qC;AACA,iB;AACA,mD;AACA,0B;AACA,gC;AACA,kC;AACA,uD;AACA,oB;AACA,4B;AACA,iD;AACA,yB;AACA,2B;AACA,4B;AACA,a;AACA,c;AACA,wB;AACA,U;AACA,mC;;AAEA,yC;AACA,mD;AACA,yC;AACA,0B;AACA,c;AACA,0B;AACA,yB;AACA,qC;AACA,iB;AACA,mD;AACA,0B;AACA,uD;AACA,6B;AACA,mC;AACA,uC;AACA,kE;AACA,wB;AACA,gC;AACA,iD;AACA,6B;AACA,+B;AACA,+B;AACA,iB;AACA,a;AACA,a;AACA,0B;AACA,+B;AACA,mC;AACA,8D;AACA,oB;AACA,4B;AACA,iD;AACA,yB;AACA,2B;AACA,4B;AACA,a;AACA,c;AACA,wB;AACA,U;AACA,+B;AACA,qC;AACA,4B;AACA,2B;AACA,wB;AACA,U;AACA,mC;;AAEA,mC;AACA,uB;AACA,8B;AACA,mC;AACA,uC;AACA,uC;AACA,sC;AACA,iB;AACA,iB;AACA,8B;AACA,oC;AACA,uC;AACA,uC;AACA,sC;AACA,iB;AACA,kB;AACA,8B;AACA,oB;AACA,oD;AACA,a;;AAEA,gC;AACA,6C;AACA,8B;AACA,oC;AACA,8B;AACA,mB;AACA,a;;AAEA,wB;AACA,U;AACA,sC;;AAEA,Q;AACA,4B;AACA,sC;AACA,8B;AACA,wC;AACA,8B;AACA,wC;AACA,+B;AACA,yC;AACA,yC;AACA,iE;AACA,kE;AACA,oB;AACA,8C;AACA,a;;AAEA,wB;AACA,U;AACA,kC;AACA,gD;AACA,U;AACA,sC;AACA,kF;AACA,U;AACA,2B;AACA,kC;AACA,gC;AACA,kC;AACA,2C;AACA,gC;AACA,2C;AACA,mC;AACA,uB;AACA,gC;AACA,wB;AACA,sC;AACA,a;AACA,gC;AACA,oC;AACA,iC;AACA,0B;AACA,U;AACA,gB;AACA,sC;AACA,oB;AACA,iC;AACA,kD;AACA,yD;AACA,2D;AACA,kF;AACA,U;AACA,oC;AACA,8B;AACA,4B;AACA,a;AACA,U;AACA,M;AACA,O;AACA,a;AACA,O;AACA,yB;AACA,uB;AACA,+B;AACA,uB;AACA,2B;AACA,8B;AACA,8B;AACA,uB;AACA,+B;AACA,kC;AACA,8B;AACA,qB;AACA,qE;AACA,qE;AACA,iE;AACA,oC;AACA,6B;AACA,sB;AACA,U;AACA,gC;AACA,4B;AACA,wF;AACA,oB;AACA,mF;AACA,kC;AACA,uD;AACA,yB;AACA,2B;AACA,4C;AACA,mC;AACA,6B;AACA,oB;AACA,8B;AACA,a;AACA,U;AACA,sC;AACA,uB;AACA,2B;AACA,0C;AACA,6C;AACA,yC;AACA,qE;AACA,uD;AACA,sB;AACA,+B;AACA,8B;AACA,a;;AAEA,2E;AACA,iC;AACA,0B;AACA,qE;AACA,uB;AACA,U;AACA,kC;AACA,kB;AACA,yB;AACA,sC;AACA,mC;AACA,yC;AACA,gE;AACA,gE;AACA,qI;AACA,yB;AACA,a;AACA,+F;AACA,kB;AACA,0B;AACA,6B;AACA,mC;AACA,mC;AACA,iC;AACA,4C;AACA,6C;AACA,iB;;AAEA,yD;AACA,kC;;AAEA,gD;AACA,qD;AACA,sD;AACA,oD;AACA,kD;AACA,6B;AACA,+D;AACA,2C;AACA,iE;AACA,mC;AACA,uE;AACA,oC;AACA,kC;AACA,qD;AACA,+C;AACA,4C;AACA,2C;AACA,iC;AACA,4B;AACA,kC;AACA,qB;AACA,iB;AACA,a;AACA,a;AACA,0B;AACA,2B;AACA,mC;AACA,kC;AACA,6B;AACA,gD;AACA,kC;AACA,8B;AACA,yC;AACA,qB;AACA,wB;AACA,gB;AACA,6D;AACA,yE;AACA,iB;;AAEA,a;AACA,c;AACA,4D;AACA,0D;AACA,U;AACA,gC;;AAEA,gB;AACA,uC;AACA,0C;AACA,qB;AACA,oC;AACA,+B;AACA,iC;AACA,iD;AACA,2C;AACA,wD;AACA,0C;AACA,uD;AACA,8B;AACA,iG;AACA,2B;AACA,+F;AACA,yB;AACA,kE;AACA,4D;AACA,2C;AACA,+D;AACA,6E;AACA,wB;AACA,uD;AACA,yD;AACA,uB;AACA,0B;AACA,+B;AACA,mC;AACA,uD;AACA,8D;AACA,gD;AACA,oD;AACA,kE;AACA,iF;AACA,qC;AACA,gD;AACA,gB;AACA,2E;AACA,gD;AACA,sE;AACA,0C;AACA,sD;AACA,c;AACA,mC;AACA,8B;AACA,gD;AACA,e;AACA,U;AACA,mC;AACA,6B;AACA,uB;AACA,wB;AACA,gB;AACA,2B;AACA,6C;AACA,qB;AACA,uB;AACA,U;AACA,kC;AACA,gF;AACA,U;AACA,gC;;AAEA,sC;AACA,uD;AACA,8D;AACA,4D;AACA,kE;AACA,4B;AACA,yC;AACA,qC;AACA,yB;AACA,mD;AACA,oD;AACA,0B;AACA,2C;AACA,2G;AACA,uB;AACA,yC;AACA,0D;AACA,qC;AACA,6B;AACA,qD;AACA,sD;AACA,8B;AACA,4C;AACA,wF;AACA,2B;AACA,wC;AACA,a;;AAEA,0B;AACA,8D;AACA,sF;AACA,uB;AACA,U;AACA,kC;AACA,6B;AACA,U;AACA,M;AACA,yC;AACA,yB;AACA,4B;AACA,yC;AACA,4B;AACA,kC;AACA,4B;AACA,iB;AACA,mB;AACA,M;AACA,W","sourcesContent":["/* \n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n/*!jQuery Knob*/\n/**\n * Downward compatible, touchable dial\n *\n * Version: 1.2.0 (15/07/2012)\n * Requires: jQuery v1.7+\n *\n * Copyright (c) 2012 Anthony Terrien\n * Under MIT and GPL licenses:\n *  http://www.opensource.org/licenses/mit-license.php\n *  http://www.gnu.org/licenses/gpl.html\n *\n * Thanks to vor, eskimoblood, spiffistan, FabrizioC\n */\n(function($) {\n\n    /**\n     * Kontrol library\n     */\n    \"use strict\";\n    /**\n     * Definition of globals and core\n     */\n    var k = {}, // kontrol\n            max = Math.max,\n            min = Math.min;\n    k.c = {};\n    k.c.d = $(document);\n    k.c.t = function(e) {\n        return e.originalEvent.touches.length - 1;\n    };\n    /**\n     * Kontrol Object\n     *\n     * Definition of an abstract UI control\n     *\n     * Each concrete component must call this one.\n     * <code>\n     * k.o.call(this);\n     * </code>\n     */\n    k.o = function() {\n        var s = this;\n        this.o = null; // array of options\n        this.$ = null; // jQuery wrapped element\n        this.i = null; // mixed HTMLInputElement or array of HTMLInputElement\n        this.g = null; // deprecated 2D graphics context for 'pre-rendering'\n        this.v = null; // value ; mixed array or integer\n        this.cv = null; // change value ; not commited value\n        this.x = 0; // canvas x position\n        this.y = 0; // canvas y position\n        this.w = 0; // canvas width\n        this.h = 0; // canvas height\n        this.$c = null; // jQuery canvas element\n        this.c = null; // rendered canvas context\n        this.t = 0; // touches index\n        this.isInit = false;\n        this.fgColor = null; // main color\n        this.pColor = null; // previous color\n        this.dH = null; // draw hook\n        this.cH = null; // change hook\n        this.eH = null; // cancel hook\n        this.rH = null; // release hook\n        this.scale = 1; // scale factor\n        this.relative = false;\n        this.relativeWidth = false;\n        this.relativeHeight = false;\n        this.$div = null; // component div\n\n        this.run = function() {\n            var cf = function(e, conf) {\n                var k;\n                for (k in conf) {\n                    s.o[k] = conf[k];\n                }\n                s.init();\n                s._configure()\n                        ._draw();\n            };\n            if (this.$.data('kontroled'))\n                return;\n            this.$.data('kontroled', true);\n            this.extend();\n            this.o = $.extend(\n                    {\n// Config\n                        min: this.$.data('min') || 0,\n                        max: this.$.data('max') || 100,\n                        stopper: true,\n                        readOnly: this.$.data('readonly') || (this.$.attr('readonly') == 'readonly'),\n                        // UI\n                        cursor: (this.$.data('cursor') === true && 30)\n                                || this.$.data('cursor')\n                                || 0,\n                        thickness: (\n                                this.$.data('thickness')\n                                && Math.max(Math.min(this.$.data('thickness'), 1), 0.01)\n                                )\n                                || 0.35,\n                        lineCap: this.$.data('linecap') || 'butt',\n                        width: this.$.data('width') || 200,\n                        height: this.$.data('height') || 200,\n                        displayInput: this.$.data('displayinput') == null || this.$.data('displayinput'),\n                        displayPrevious: this.$.data('displayprevious'),\n                        fgColor: this.$.data('fgcolor') || '#87CEEB',\n                        inputColor: this.$.data('inputcolor'),\n                        font: this.$.data('font') || 'Arial',\n                        fontWeight: this.$.data('font-weight') || 'bold',\n                        inline: false,\n                        step: this.$.data('step') || 1,\n                        // Hooks\n                        draw: null, // function () {}\n                        change: null, // function (value) {}\n                        cancel: null, // function () {}\n                        release: null, // function (value) {}\n                        error: null // function () {}\n                    }, this.o\n                    );\n            // finalize options\n            if (!this.o.inputColor) {\n                this.o.inputColor = this.o.fgColor;\n            }\n\n// routing value\n            if (this.$.is('fieldset')) {\n\n// fieldset = array of integer\n                this.v = {};\n                this.i = this.$.find('input')\n                this.i.each(function(k) {\n                    var $this = $(this);\n                    s.i[k] = $this;\n                    s.v[k] = $this.val();\n                    $this.bind(\n                            'change keyup'\n                            , function() {\n                        var val = {};\n                        val[k] = $this.val();\n                        s.val(val);\n                    }\n                    );\n                });\n                this.$.find('legend').remove();\n            } else {\n\n// input = integer\n                this.i = this.$;\n                this.v = this.$.val();\n                (this.v == '') && (this.v = this.o.min);\n                this.$.bind(\n                        'change keyup'\n                        , function() {\n                    s.val(s._validate(s.$.val()));\n                }\n                );\n            }\n\n            (!this.o.displayInput) && this.$.hide();\n            // adds needed DOM elements (canvas, div)\n            this.$c = $(document.createElement('canvas'));\n            if (typeof G_vmlCanvasManager !== 'undefined') {\n                G_vmlCanvasManager.initElement(this.$c[0]);\n            }\n            this.c = this.$c[0].getContext ? this.$c[0].getContext('2d') : null;\n            if (!this.c) {\n                this.o.error && this.o.error();\n                return;\n            }\n\n// hdpi support\n            this.scale = (window.devicePixelRatio || 1) /\n                    (\n                            this.c.webkitBackingStorePixelRatio ||\n                            this.c.mozBackingStorePixelRatio ||\n                            this.c.msBackingStorePixelRatio ||\n                            this.c.oBackingStorePixelRatio ||\n                            this.c.backingStorePixelRatio || 1\n                            );\n            // detects relative width / height\n            this.relativeWidth = ((this.o.width % 1 !== 0)\n                    && this.o.width.indexOf('%'));\n            this.relativeHeight = ((this.o.height % 1 !== 0)\n                    && this.o.height.indexOf('%'));\n            this.relative = (this.relativeWidth || this.relativeHeight);\n            // wraps all elements in a div\n            this.$div = $('<div style=\"'\n                    + (this.o.inline ? 'display:inline;' : '')\n                    + '\"></div>');\n            this.$.wrap(this.$div).before(this.$c);\n            this.$div = this.$.parent();\n            // computes size and carves the component\n            this._carve();\n            // prepares props for transaction\n            if (this.v instanceof Object) {\n                this.cv = {};\n                this.copy(this.v, this.cv);\n            } else {\n                this.cv = this.v;\n            }\n\n// binds configure event\n            this.$\n                    .bind(\"configure\", cf)\n                    .parent()\n                    .bind(\"configure\", cf);\n            // finalize init\n            this._listen()\n                    ._configure()\n                    ._xy()\n                    .init();\n            this.isInit = true;\n            // the most important !\n            this._draw();\n            return this;\n        };\n        this._carve = function() {\n            if (this.relative) {\n                var w = this.relativeWidth\n                        ? this.$div.parent().width()\n                        * parseInt(this.o.width) / 100\n                        : this.$div.parent().width(),\n                        h = this.relativeHeight\n                        ? this.$div.parent().height()\n                        * parseInt(this.o.height) / 100\n                        : this.$div.parent().height();\n                // apply relative\n                this.w = this.h = Math.min(w, h);\n            } else {\n                this.w = this.o.width;\n                this.h = this.o.height;\n            }\n\n// finalize div\n            this.$div.css({\n                'width': this.w + 'px',\n                'height': this.h + 'px'\n            });\n            // finalize canvas with computed width\n            this.$c.attr({\n                width: this.w,\n                height: this.h\n            });\n            // scaling\n            if (this.scale !== 1) {\n                this.$c[0].width = this.$c[0].width * this.scale;\n                this.$c[0].height = this.$c[0].height * this.scale;\n                this.$c.width(this.w);\n                this.$c.height(this.h);\n            }\n\n            return this;\n        }\n\n        this._draw = function() {\n\n// canvas pre-rendering\n            var d = true;\n            s.g = s.c;\n            s.clear();\n            s.dH\n                    && (d = s.dH());\n            (d !== false) && s.draw();\n        };\n        this._touch = function(e) {\n\n            var touchMove = function(e) {\n\n                var v = s.xy2val(\n                        e.originalEvent.touches[s.t].pageX,\n                        e.originalEvent.touches[s.t].pageY\n                        );\n                s.change(s._validate(v));\n                s._draw();\n            };\n            // get touches index\n            this.t = k.c.t(e);\n            // First touch\n            touchMove(e);\n            // Touch events listeners\n            k.c.d\n                    .bind(\"touchmove.k\", touchMove)\n                    .bind(\n                    \"touchend.k\"\n                    , function() {\n                k.c.d.unbind('touchmove.k touchend.k');\n                if (\n                        s.rH\n                        && (s.rH(s.cv) === false)\n                        )\n                    return;\n                s.val(s.cv);\n            }\n            );\n            return this;\n        };\n        this._mouse = function(e) {\n\n            var mouseMove = function(e) {\n                var v = s.xy2val(e.pageX, e.pageY);\n                s.change(s._validate(v));\n                s._draw();\n            };\n            // First click\n            mouseMove(e);\n            // Mouse events listeners\n            k.c.d\n                    .bind(\"mousemove.k\", mouseMove)\n                    .bind(\n                    // Escape key cancel current change\n                    \"keyup.k\"\n                    , function(e) {\n                if (e.keyCode === 27) {\n                    k.c.d.unbind(\"mouseup.k mousemove.k keyup.k\");\n                    if (\n                            s.eH\n                            && (s.eH() === false)\n                            )\n                        return;\n                    s.cancel();\n                }\n            }\n            )\n                    .bind(\n                    \"mouseup.k\"\n                    , function(e) {\n                k.c.d.unbind('mousemove.k mouseup.k keyup.k');\n                if (\n                        s.rH\n                        && (s.rH(s.cv) === false)\n                        )\n                    return;\n                s.val(s.cv);\n            }\n            );\n            return this;\n        };\n        this._xy = function() {\n            var o = this.$c.offset();\n            this.x = o.left;\n            this.y = o.top;\n            return this;\n        };\n        this._listen = function() {\n\n            if (!this.o.readOnly) {\n                this.$c\n                        .bind(\n                        \"mousedown\"\n                        , function(e) {\n                    e.preventDefault();\n                    s._xy()._mouse(e);\n                }\n                )\n                        .bind(\n                        \"touchstart\"\n                        , function(e) {\n                    e.preventDefault();\n                    s._xy()._touch(e);\n                }\n                );\n                this.listen();\n            } else {\n                this.$.attr('readonly', 'readonly');\n            }\n\n            if (this.relative) {\n                $(window).resize(function() {\n                    s._carve()\n                            .init();\n                    s._draw();\n                });\n            }\n\n            return this;\n        };\n        this._configure = function() {\n\n// Hooks\n            if (this.o.draw)\n                this.dH = this.o.draw;\n            if (this.o.change)\n                this.cH = this.o.change;\n            if (this.o.cancel)\n                this.eH = this.o.cancel;\n            if (this.o.release)\n                this.rH = this.o.release;\n            if (this.o.displayPrevious) {\n                this.pColor = this.h2rgba(this.o.fgColor, \"0.4\");\n                this.fgColor = this.h2rgba(this.o.fgColor, \"0.6\");\n            } else {\n                this.fgColor = this.o.fgColor;\n            }\n\n            return this;\n        };\n        this._clear = function() {\n            this.$c[0].width = this.$c[0].width;\n        };\n        this._validate = function(v) {\n            return (~~(((v < 0) ? -0.5 : 0.5) + (v / this.o.step))) * this.o.step;\n        };\n        // Abstract methods\n        this.listen = function() {\n        }; // on start, one time\n        this.extend = function() {\n        }; // each time configure triggered\n        this.init = function() {\n        }; // each time configure triggered\n        this.change = function(v) {\n        }; // on change\n        this.val = function(v) {\n        }; // on release\n        this.xy2val = function(x, y) {\n        }; //\n        this.draw = function() {\n        }; // on change / on release\n        this.clear = function() {\n            this._clear();\n        };\n        // Utils\n        this.h2rgba = function(h, a) {\n            var rgb;\n            h = h.substring(1, 7)\n            rgb = [parseInt(h.substring(0, 2), 16)\n                        , parseInt(h.substring(2, 4), 16)\n                        , parseInt(h.substring(4, 6), 16)];\n            return \"rgba(\" + rgb[0] + \",\" + rgb[1] + \",\" + rgb[2] + \",\" + a + \")\";\n        };\n        this.copy = function(f, t) {\n            for (var i in f) {\n                t[i] = f[i];\n            }\n        };\n    };\n    /**\n     * k.Dial\n     */\n    k.Dial = function() {\n        k.o.call(this);\n        this.startAngle = null;\n        this.xy = null;\n        this.radius = null;\n        this.lineWidth = null;\n        this.cursorExt = null;\n        this.w2 = null;\n        this.PI2 = 2 * Math.PI;\n        this.extend = function() {\n            this.o = $.extend(\n                    {\n                        bgColor: this.$.data('bgcolor') || '#EEEEEE',\n                        angleOffset: this.$.data('angleoffset') || 0,\n                        angleArc: this.$.data('anglearc') || 360,\n                        inline: true\n                    }, this.o\n                    );\n        };\n        this.val = function(v) {\n            if (null != v) {\n                var newValue = this.o.stopper ? max(min(v, this.o.max), this.o.min) : v;\n                if (\n                        newValue != this.cv // avoid double callback for same value\n                        && this.cH\n                        && (this.cH(this.cv) === false)\n                        )\n                    return;\n                this.v = this.cv = newValue;\n                this.$.val(this.v);\n                this._draw();\n            } else {\n                return this.v;\n            }\n        };\n        this.xy2val = function(x, y) {\n            var a, ret;\n            a = Math.atan2(\n                    x - (this.x + this.w2)\n                    , -(y - this.y - this.w2)\n                    ) - this.angleOffset;\n            if (this.angleArc != this.PI2 && (a < 0) && (a > -0.5)) {\n// if isset angleArc option, set to min if .5 under min\n                a = 0;\n            } else if (a < 0) {\n                a += this.PI2;\n            }\n\n            ret = ~~(0.5 + (a * (this.o.max - this.o.min) / this.angleArc))\n                    + this.o.min;\n            this.o.stopper\n                    && (ret = max(min(ret, this.o.max), this.o.min));\n            return ret;\n        };\n        this.listen = function() {\n// bind MouseWheel\n            var s = this,\n                    mw = function(e) {\n                e.preventDefault();\n                var ori = e.originalEvent\n                        , deltaX = ori.detail || ori.wheelDeltaX\n                        , deltaY = ori.detail || ori.wheelDeltaY\n                        , v = parseInt(s.$.val()) + (deltaX > 0 || deltaY > 0 ? s.o.step : deltaX < 0 || deltaY < 0 ? -s.o.step : 0);\n                s.val(v);\n            }\n            , kval, to, m = 1, kv = {37: -s.o.step, 38: s.o.step, 39: s.o.step, 40: -s.o.step};\n            this.$\n                    .bind(\n                    \"keydown\"\n                    , function(e) {\n                var kc = e.keyCode;\n                // numpad support\n                if (kc >= 96 && kc <= 105) {\n                    kc = e.keyCode = kc - 48;\n                }\n\n                kval = parseInt(String.fromCharCode(kc));\n                if (isNaN(kval)) {\n\n                    (kc !== 13)         // enter\n                            && (kc !== 8)       // bs\n                            && (kc !== 9)       // tab\n                            && (kc !== 189)     // -\n                            && e.preventDefault();\n                    // arrows\n                    if ($.inArray(kc, [37, 38, 39, 40]) > -1) {\n                        e.preventDefault();\n                        var v = parseInt(s.$.val()) + kv[kc] * m;\n                        s.o.stopper\n                                && (v = max(min(v, s.o.max), s.o.min));\n                        s.change(v);\n                        s._draw();\n                        // long time keydown speed-up\n                        to = window.setTimeout(\n                                function() {\n                                    m *= 2;\n                                }\n                        , 30\n                                );\n                    }\n                }\n            }\n            )\n                    .bind(\n                    \"keyup\"\n                    , function(e) {\n                if (isNaN(kval)) {\n                    if (to) {\n                        window.clearTimeout(to);\n                        to = null;\n                        m = 1;\n                        s.val(s.$.val());\n                    }\n                } else {\n// kval postcond\n                    (s.$.val() > s.o.max && s.$.val(s.o.max))\n                            || (s.$.val() < s.o.min && s.$.val(s.o.min));\n                }\n\n            }\n            );\n//            this.$c.bind(\"mousewheel DOMMouseScroll\", mw);\n//            this.$.bind(\"mousewheel DOMMouseScroll\", mw)\n        };\n        this.init = function() {\n\n            if (\n                    this.v < this.o.min\n                    || this.v > this.o.max\n                    )\n                this.v = this.o.min;\n            this.$.val(this.v);\n            this.w2 = this.w / 2;\n            this.cursorExt = this.o.cursor / 100;\n            this.xy = this.w2 * this.scale;\n            this.lineWidth = this.xy * this.o.thickness;\n            this.lineCap = this.o.lineCap;\n            this.radius = this.xy - this.lineWidth / 2;\n            this.o.angleOffset\n                    && (this.o.angleOffset = isNaN(this.o.angleOffset) ? 0 : this.o.angleOffset);\n            this.o.angleArc\n                    && (this.o.angleArc = isNaN(this.o.angleArc) ? this.PI2 : this.o.angleArc);\n            // deg to rad\n            this.angleOffset = this.o.angleOffset * Math.PI / 180;\n            this.angleArc = this.o.angleArc * Math.PI / 180;\n            // compute start and end angles\n            this.startAngle = 1.5 * Math.PI + this.angleOffset;\n            this.endAngle = 1.5 * Math.PI + this.angleOffset + this.angleArc;\n            var s = max(\n                    String(Math.abs(this.o.max)).length\n                    , String(Math.abs(this.o.min)).length\n                    , 2\n                    ) + 2;\n            this.o.displayInput\n                    && this.i.css({\n                'width': ((this.w / 2 + 2) >> 0) + 'px'\n                        , 'height': ((this.w / 2) >> 0) + 'px'\n                        , 'position': 'absolute'\n                        , 'vertical-align': 'middle'\n                        , 'margin-top': ((this.w / 4) >> 0) + 'px'\n                        , 'margin-left': '-' + ((this.w * 3 / 4 + 2) >> 0) + 'px'\n                        , 'border': 0\n                        , 'background' : 'none' \n                \n                , 'font': this.o.fontWeight + ' ' + 0 + 'px ' + this.o.font\n                        , 'text-align': 'center'\n                        , 'color': this.o.inputColor || this.o.fgColor\n                        , 'padding': '0px'\n                        , '-webkit-appearance': 'none'\n            })\n                    || this.i.css({\n                'width': '0px'\n                        , 'visibility': 'hidden'\n            });\n        };\n        this.change = function(v) {\n            if (v == this.cv)\n                return;\n            this.cv = v;\n            if (\n                    this.cH\n                    && (this.cH(v) === false)\n                    )\n                return;\n        };\n        this.angle = function(v) {\n            return (v - this.o.min) * this.angleArc / (this.o.max - this.o.min);\n        };\n        this.draw = function() {\n\n            var c = this.g, // context\n                    a = this.angle(this.cv)    // Angle\n                    , sat = this.startAngle     // Start angle\n                    , eat = sat + a             // End angle\n                    , sa, ea                    // Previous angles\n                    , r = 1;\n            c.lineWidth = this.lineWidth;\n            c.lineCap = this.lineCap;\n            this.o.cursor\n                    && (sat = eat - this.cursorExt)\n                    && (eat = eat + this.cursorExt);\n            c.beginPath();\n            c.strokeStyle = this.o.bgColor;\n            c.arc(this.xy, this.xy, this.radius, this.endAngle - 0.00001, this.startAngle + 0.00001, true);\n            c.stroke();\n            if (this.o.displayPrevious) {\n                ea = this.startAngle + this.angle(this.v);\n                sa = this.startAngle;\n                this.o.cursor\n                        && (sa = ea - this.cursorExt)\n                        && (ea = ea + this.cursorExt);\n                c.beginPath();\n                c.strokeStyle = this.pColor;\n                c.arc(this.xy, this.xy, this.radius, sa - 0.00001, ea + 0.00001, false);\n                c.stroke();\n                r = (this.cv == this.v);\n            }\n\n            c.beginPath();\n            c.strokeStyle = r ? this.o.fgColor : this.fgColor;\n            c.arc(this.xy, this.xy, this.radius, sat - 0.00001, eat + 0.00001, false);\n            c.stroke();\n        };\n        this.cancel = function() {\n            this.val(this.v);\n        };\n    };\n    $.fn.dial = $.fn.knob = function(o) {\n        return this.each(\n                function() {\n                    var d = new k.Dial();\n                    d.o = o;\n                    d.$ = $(this);\n                    d.run();\n                }\n        ).parent();\n    };\n})(jQuery);\n"]}